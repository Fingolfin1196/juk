/*
 * This file was generated by dbusidl2cpp version 0.6
 * Command line was: dbusidl2cpp -m -a collectionadaptor -- org.kde.juk.collection.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "collectionadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class CollectionAdaptor
 */

CollectionAdaptor::CollectionAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

CollectionAdaptor::~CollectionAdaptor()
{
    // destructor
}

void CollectionAdaptor::createPlaylist(const QString &list)
{
    // handle method call org.kde.juk.collection.createPlaylist
    QMetaObject::invokeMethod(parent(), "createPlaylist", Q_ARG(QString, list));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->createPlaylist(list);
}

void CollectionAdaptor::open(const QString &playlist, const QStringList &files)
{
    // handle method call org.kde.juk.collection.open
    QMetaObject::invokeMethod(parent(), "open", Q_ARG(QString, playlist), Q_ARG(QStringList, files));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->open(playlist, files);
}

void CollectionAdaptor::open(const QStringList &files)
{
    // handle method call org.kde.juk.collection.open
    QMetaObject::invokeMethod(parent(), "open", Q_ARG(QStringList, files));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->open(files);
}

QString CollectionAdaptor::playingPlaylist()
{
    // handle method call org.kde.juk.collection.playingPlaylist
    QString out0;
    QMetaObject::invokeMethod(parent(), "playingPlaylist", Q_RETURN_ARG(QString, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->playingPlaylist();
    return out0;
}

QString CollectionAdaptor::playlist()
{
    // handle method call org.kde.juk.collection.playlist
    QString out0;
    QMetaObject::invokeMethod(parent(), "playlist", Q_RETURN_ARG(QString, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->playlist();
    return out0;
}

QStringList CollectionAdaptor::playlistTracks(const QString &playlist)
{
    // handle method call org.kde.juk.collection.playlistTracks
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "playlistTracks", Q_RETURN_ARG(QStringList, out0), Q_ARG(QString, playlist));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->playlistTracks(playlist);
    return out0;
}

QStringList CollectionAdaptor::playlists()
{
    // handle method call org.kde.juk.collection.playlists
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "playlists", Q_RETURN_ARG(QStringList, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->playlists();
    return out0;
}

void CollectionAdaptor::remove()
{
    // handle method call org.kde.juk.collection.remove
    QMetaObject::invokeMethod(parent(), "remove");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->remove();
}

void CollectionAdaptor::removeTrack(const QString &playlist, const QStringList &files)
{
    // handle method call org.kde.juk.collection.removeTrack
    QMetaObject::invokeMethod(parent(), "removeTrack", Q_ARG(QString, playlist), Q_ARG(QStringList, files));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->removeTrack(playlist, files);
}

void CollectionAdaptor::setPlaylist(const QString &playlist)
{
    // handle method call org.kde.juk.collection.setPlaylist
    QMetaObject::invokeMethod(parent(), "setPlaylist", Q_ARG(QString, playlist));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->setPlaylist(playlist);
}

QString CollectionAdaptor::trackProperty(const QString &file, const QString &property)
{
    // handle method call org.kde.juk.collection.trackProperty
    QString out0;
    QMetaObject::invokeMethod(parent(), "trackProperty", Q_RETURN_ARG(QString, out0), Q_ARG(QString, file), Q_ARG(QString, property));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->trackProperty(file, property);
    return out0;
}


#include "collectionadaptor.moc"
